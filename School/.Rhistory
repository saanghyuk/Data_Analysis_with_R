unlst <- unlist(lst)
bmi.df
unlst
length(height)
var(height)
sd(height)
sqrt(var(height))
se <- sd(height)/sd(length(height))
se <- sd(height)/sd(length(height))
se
se
se <- sd(height)/sd(length(height))
se
unlst
length(height)
var(height)
sd(height)
se <- sd(height)/sd(length(height))
se
height
se <- sd(height)/sd(length(height))
se
se
se
se
se
se <- sd(height)/sqrt(length(height))
se
detacc(bmi)
detach(bmi)
detach(bmi)
detach(bmi)
detach(bmi)
detach(bmi.df)
bmi.df
bmi.df$bmi
summary(bmi.df$bmi)
quantile(bmi.df$bmi)
summary(bmi.df$bmi)
source('~/Documents/R/School/practice2.R')
source('~/Documents/R/School/practice2.R')
quantile(bmi.df$bmi)
quantile(bmi.df$bmi)
bmi.df
quantile(bmi.df$bmi, probs=c(0, 0.5, 0.8))
boxplot(bmi.df$bmi, col="sky blue")
bmi <- c(bmi.df$bmi)
sort(bmi)
source('~/Documents/R/School/practice2.R')
source('~/Documents/R/School/practice2.R')
bmi <- c(bmi.df$bmi)
sort(bmi)
bmi <- c(bmi.df$bmi)
bmi <- c(bmi.df$bmi)
sort(bmi)
bmi <- c(bmi.df$bmi)
bmi
sort(bmi)
score1 <- data.frame(haksaeng=c("K", "K", "C","J", "C"), midterm=c(86, 65, 70, 80, 90), stringsAsFactors =F )
score1
is.numeric(score1$haksaeng)
score1
bmi <- c(bmi.df$bmi)
bmi
sort(bmi)
sort(bmi, decreasing=TRUE)
sort(bmi)
sort(bmi, decreasing=TRUE)
boxplot(bmi.df$bmi, col="sky blue")
data()
data(iris)
iris
head(iris)
head(iris, 10)
tail(iris)
dim(iris)
iris
dim(iris)
str(iris)
summary(iris)
?iris
View(iris)
length(iris)
mode(iris)
names(iris)
head(iris)
names(iris)
head(iris)
row.names(iris)
length(iris)
class(iris)
name <- c("Kim", "Lee", "Park", "Choi", "Kang", "Shin")
height <- c(160, 170, 180, 172, 182, 170)
gender <- c("female", "male", "female", "female", "male", "male")
ks.df <- data.frame(name, height, gender)
add <- data.frame(name="Hong", height=165, gender="male")
ks.df
temp.df <- ks.df
temp.df
library(dplyr)
add <- data.frame(name="Hong", height=165, gender="male")
ks.df1 <- bind_rows(ks.df, add)
add
ks.df
ks.df1 <- bind_rows(ks.df, add)
ks.df1 <- bind_rows(ks.df, add)
add
ks.df
class(add)
add
ks.df
add <- data.frame(name="Hong", height=165, gender=factor("male"))
ks.df1 <- bind_rows(ks.df, add)
add
add <- data.frame(name="Hong", height=165, gender="male")
summary(ks.df)
add <- data.frame(name="Hong", height=165, gender="male", stringsAsFactors = F)
ks.df <- data.frame(name, height, gender, stringsAsFactors = F)
add <- data.frame(name="Hong", height=165, gender="male", stringsAsFactors = F)
ks.df1 <- bind_rows(ks.df, add)
data(iris)
install.packages("dplyr")
library('dplyr')
library('dplyr')
library(dplyr)
iris.anal<-iris
iris.anal
iris.anal <- rename(iris.anal, SL=Sepal.Length, SW=Sepal.Width, PL=Petal.Length, PW=Petal.Width, Type=Species)
head(iris.anal)
iris.anal
attach(iris.anal)
mean(SL)
sd(PW)
iris.anal
iris.anal %>% filter(Type=="setona") %>% summarise(mean.sl=mean(SL), sd.sl=sd(SL))
iris.anal %>% filter(Type=="setona") %>% summarise(mean.sl=mean(SL), sd.sl=sd(SL))
attach(iris.anal)
iris.anal %>% filter(Type=="setona") %>% summarise(mean.sl=mean(SL), sd.sl=sd(SL))
iris.anal %>% filter(Type=="setona")
iris.anal %>% filter(Type=="setona")
Type
iris.anal %>% filter(Type=="setosa") %>% summarise(mean.sl=mean(SL), sd.sl=sd(SL))
View(iris)
library(doBy)
install.packages("doBy")
library(doBy)
source('~/Documents/R/School/practice2.R', echo=TRUE)
summaryBy(Sepal.Width ~ Species, iris)
summaryBy(Sepal.Width ~ Species, iris)
?summaryBy
?summaryBy
summaryBy(Sepal.Width ~ Species, iris)
summary(iris)
summaryBy(Sepal.Width+Sepal.Length ~ Species, iris)
summaryBy(Sepal.Width ~ Species, iris)
summaryBy(Sepal.Width+Sepal.Length ~ Species, iris)
source('~/Documents/R/School/practice2.R')
iris.anal
iris.anal %>% summarise(mean.sl = mean(SL), sd.sl=sd(SL), round(mean.sl, 2))
iris.anal %>% summarise(mean.sl = mean(SL), sd.sl=sd(SL), round(mean.sl, 2))
iris.anal %>% summarise(mean.sl = mean(SL), sd.sl=sd(SL), round(mean.sl, 2))
#scatter plot
data()
data(trees)
str(trees)
head(trees)
dim(trees)
plot(trees)
plot(trees)
ht<- data.frame(name=c("kim", "lee", "park"), height=c(160, 170, 180))
wt <- data.frame(student=c("kim", "lee", "park", "choi"), weight=c(60, 70, 80, 72))
ht<- data.frame(name=c("kim", "lee", "park"), height=c(160, 170, 180))
wt <- data.frame(student=c("kim", "lee", "park", "choi"), weight=c(60, 70, 80, 72))
body1 <- merge(ht, wt, by.x="name", by.y="student")
body1
ht
wt
body1
source('~/Documents/R/School/practice2.R')
plot(trees$Girth, trees$Volume)
library('ggplot2')
data(iris)
str(iris)
head(iris)
head(iris)
plot(iris)
plot(iris$Sepal.Length, iris$Sepal.Width)
qplot(data=iris, Sepal.Length, Sepal.Width, col=Species)
qplot(data=iris, Sepal.Length, Sepal.Width, col=Species, size=Sepal.length)
qplot(data=iris, Sepal.Length, Sepal.Width, col=Species, size=Sepal.Length)
qplot(data=iris, Sepal.Length, Sepal.Width, col=Species, geon="line", main="Love Iris")
qplot(data=iris, Sepal.Length, Sepal.Width, col=Species, geon="line", main="Love Iris")
qplot(data=iris, Sepal.Length, Sepal.Width, col=Species, geom="line", main="Love Iris")
#lattice
data(trees)
library(lattice)
mini= min(trees$Volume)
mini= min(trees$Volume)
maxi = max(trees$Volume)
mini
mini
mini= min(trees$Volume)
maxi = max(trees$Volume)
r=ceiling((maxi-mini)/5)
inf = seq(mini, maxi, r)
inf
inf = seq(mini, maxi, r)
inf
mini <= min(trees$Volume)
mini <= min(trees$Volume)
hi='hello'
hi
mini <= min(trees$Volume)
mini = min(trees$Volume)
maxi = max(trees$Volume)
r
inf
library(dplyr)
name <- c("Kim", "Lee", "Park", "Choi", "Kang", "Shin")
height <- c(160, 176, 180, 170, 180, 172)
weight <- c(60, 90, 68, 70, 64, 74)
gender <- c("female", "male", "female", "female", "male", "male")
student.df <- data.frame(name, height, weight, gender)
student.df
student.df%>%filter(gender == "female")
inf
r
trees$Volume = factor(floor((trees$Volume - mini)/r), labels=paste(inf, inf+r, sep="-"))
trees$Volume = factor(floor((trees$Volume - mini)/r), labels=paste(inf, inf+r, sep="-"))
trees$Volume = factor(floor((trees$Volume - mini)/r), labels=paste(inf, inf+r, sep="-"))
library(lattice)
mini = min(trees$Volume)
maxi = max(trees$Volume)
mini = min(trees$Volume)
#lattice
data(trees)
library(lattice)
mini = min(trees$Volume)
maxi = max(trees$Volume)
detach("package:lattice", unload=TRUE)
mini = min(trees$Volume)
mini = min(trees$Volume)
maxi = max(trees$Volume)
(lattice)
r=ceiling((maxi-mini)/5)
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
mini = min(trees$Volume)
maxi = max(trees$Volume)
r=ceiling((maxi-mini)/5)
mini = min(trees$Volume)
maxi = max(trees$Volume)
r=ceiling((maxi-mini)/5)
inf = seq(mini, maxi, r)
inf
trees$Volume = factor(floor((trees$Volume - mini)/r), labels=paste(inf, inf+r, sep="-"))
trees$Volume
xyplot(Girth ~ Height | Volume, data=trees, main ="TREE")
splom(trees[, 1:3])
cloud(data=trees, Volume~Height*Girth, sub="NAMU")
bwplot(data=trees, Volume~Girth, main='TREE')
cloud(data=trees, Volume~Height*Girth, sub="NAMU")
bwplot(data=trees, Volume~Girth, main='TREE')
splom(trees[, 1:3])
splom(trees[, 1:3])
cloud(data=trees, Volume~Height*Girth, sub="NAMU")
bwplot(data=trees, Volume~Girth, main='TREE')
library(lattice)
mini = min(trees$Volume)
maxi = max(trees$Volume)
r=ceiling((maxi-mini)/5)
#lattice
data(trees)
mini = min(trees$Volume)
maxi = max(trees$Volume)
#lattice
data(trees)
library(lattice)
mini = min(trees$Volume)
maxi = max(trees$Volume)
r=ceiling((maxi-mini)/5)
inf = seq(mini, maxi, r)
inf
trees$Volume = factor(floor((trees$Volume - mini)/r), labels=paste(inf, inf+r, sep="-"))
xyplot(Girth ~ Height | Volume, data=trees, main ="TREE")
splom(trees[, 1:3])
cloud(data=trees, Volume~Height*Girth, sub="NAMU")
bwplot(data=trees, Volume~Girth, main='TREE')
#lattice
data(trees)
library(lattice)
mini = min(trees$Volume)
maxi = max(trees$Volume)
r=ceiling((maxi-mini)/5)
source('~/Documents/R/School/practice2.R')
#lattice
data(trees)
library(lattice)
mini = min(trees$Volume)
maxi = max(trees$Volume)
r=ceiling((maxi-mini)/5)
inf = seq(mini, maxi, r)
inf
?seq()
mini
maxi
inf
trees$Volume = factor(floor((trees$Volume - mini)/r), labels=paste(inf, inf+r, sep="-"))
floor((trees$Volume - mini)/r)
floor((trees$Volume - mini)/r)
floor((trees$Volume - mini)/r)
ht<- data.frame(name=c("kim", "lee", "park"), height=c(160, 170, 180))
##########bar chart
Gap <- c(354, 250, 234, 312)
Eul <- c(234, 450, 200, 250)
sales.k <- matrix(c(Gap, Eul), ncol=4, byrow=T, dimnames=list(c("Gap", "Eul"), c("Jan", "Feb", "Mar",, "Apr")))
sales.k <- matrix(c(Gap, Eul), ncol=4, byrow=T, dimnames=list(c("Gap", "Eul"), c("Jan", "Feb", "Mar",, "Apr")))
sales.k <- matrix(c(Gap, Eul), ncol=4, byrow=T, dimnames=list(c("Gap", "Eul"), c("Jan", "Feb", "Mar", "Apr")))
sales.k
rowsum <- apply(sales.k, 1, sum)
rowsum
colsum
colsum <- apply(sales.k, 2, sum)
colsum
rowsum <- apply(sales.k, 1, sum)
rowsum
colsum <- apply(sales.k, 2, sum)
colsum
barplot(sales.k main="Total Sales", xlab="Month", ylab="Sales", names.arg=c("Jan", "Feb", "Mar", "Apr"),
border="blue", col=rainbow(2), ylim=(c(0, 1000)))
barplot(sales.k,  main="Total Sales", xlab="Month", ylab="Sales", names.arg=c("Jan", "Feb", "Mar", "Apr"),
border="blue", col=rainbow(2), ylim=(c(0, 1000)))
barplot(sales.k,  main="Total Sales", xlab="Month", ylab="Sales", names.arg=c("Jan", "Feb", "Mar", "Apr"),
border="blue", col=rainbow(2), ylim=(c(0, 50)))
barplot(sales.k,  main="Total Sales", xlab="Month", ylab="Sales", names.arg=c("Jan", "Feb", "Mar", "Apr"),
border="blue", col=rainbow(2), ylim=(c(0, 0)))
barplot(sales.k,  main="Total Sales", xlab="Month", ylab="Sales", names.arg=c("Jan", "Feb", "Mar", "Apr"),
border="blue", col=rainbow(2), ylim=(c(0, 1000)))
legend(4, 1000, c("Gap Store", "Eul Store"), cex=0.8, fill=rainbow(2))
legend(4, 1000, c("Gap Store", "Eul Store"), cex=0.7, fill=rainbow(2))
barplot(sales.k,  main="Total Sales", xlab="Month", ylab="Sales", names.arg=c("Jan", "Feb", "Mar", "Apr"),
border="blue", col=rainbow(2), ylim=(c(0, 1000)))
legend(4, 1000, c("Gap Store", "Eul Store"), cex=0.7, fill=rainbow(2))
barplot(sales.k, main="Total Sales by Month", xlab="Month", ylab="Sales", beside=T, names.arg=c("Jan", "Feb", "Mar", "Apr"))
barplot(sales.k, main="Total Sales by Month", xlab="Month", ylab="Sales", beside=T, names.arg=c("Jan", "Feb", "Mar", "Apr"))
barplot(sales.k,  main="Total Sales", xlab="Month", ylab="Sales", names.arg=c("Jan", "Feb", "Mar", "Apr"),
border="blue", col=rainbow(2), ylim=(c(0, 1000)))
barplot(sales.k, main="Total Sales by Month", xlab="Month", ylab="Sales", beside=T, names.arg=c("Jan", "Feb", "Mar", "Apr"),
col=rainbow(2))
barplot(sales.k, main="Total Sales by Month", xlab="Month", ylab="Sales", beside=T, names.arg=c("Jan", "Feb", "Mar", "Apr"),
col=rainbow(2), ylim=(c(0, 500)))
legend(10, 500, c("Gap", "Eul"), cex=0.7, fill=rainbow(2))
sales.k
t(sales.k)
barplot(t(sales.k), main="Total Sales by Store", xlab="Store", ylab="Sales", beside=T, names.arg=c("Gap", "Eul"), border="blue")
barplot(t(sales.k), main="Total Sales by Store", xlab="Store", ylab="Sales", beside=T, names.arg=c("Gap", "Eul"), border="blue",
col=rainbow(4), ylim=(c(0, 400)))
#ggplot2
library(ggplot2)
Month <- c("Jan", "Feb", "Mar", "Apr")
Gap <- c(354, 250, 234, 312)
Eul <- c(234, 450, 200, 250)
sales.df <- data.frame(Month, Gap, Eul)
sales.df
Month <- rep(c("Jan", "Feb", "Mar", "Apr"), each=2, len=8)
rep
Month
Store <- rep(c("Gap", "Eul"), times=4)
Store
Sales <- c(354, 234, 250, 450, 234, 200, 312, 250)
Sales
sales.df2 <- data.frame(Month, Store, Sales)
sales.df2
sales.df2
d <- ggplot(sales.df2, aes(x=Month, y=Sales, fill=Store))
d
d <- ggplot(sales.df2, aes(x=Month, y=Sales, fill=Store))+geom_col()
d
d <- ggplot(sales.df2, aes(x=Month, y=Sales, fill=Store))+geom_bar()
d
d <- ggplot(sales.df2, aes(x=Month, y=Sales, fill=Store))+geom_col()
d
d <- ggplot(sales.df2, aes(x=Month, y=Sales, fill=Store))+geom_col()
d
d+scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
d <- ggplot(sales.df2, aes(x=Month, y=Sales))+geom_col()
d+scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
d <- ggplot(sales.df2, aes(x=Month, y=Sales))+geom_col(fill=Store)
d+scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
d+scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
d <- ggplot(sales.df2, aes(x=Month, y=Sales))+geom_col(fill=Store)
d+scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
d <- ggplot(sales.df2, aes(x=Month, y=Sales))+geom_col(fill='Store')
d+scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
d <- ggplot(sales.df2, aes(x=Month, y=Sales, fill=Store))+geom_col()
d+scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
Pct <- round((Sales/600)*100, 1)
Pct
sales.df2
sales.df2 <- data.frame(sales.df2, Pct)
sales.df2
d <- ggplot(sales.df2, aes(Month, Pct, fill=Store))+geom_col()
d
d+scale_x_discrete(liimts=c("jan", "Feb", "Mar", "Ap"))
d+scale_x_discrete(liimts=c("jan", "Feb", "Mar", "Apr"))
d+scale_x_discrete(limts=c("jan", "Feb", "Mar", "Apr"))
d + scale_x_discrete(limits=c("jan", "Feb", "Mar", "Apr"))
d + scale_x_discrete(limits=c("Jan", "Feb", "Mar", "Apr"))
scale_x_discrete
?scale_x_discrete
ggplot(data=sales.df2, aes(x=reorder(Month, -Sales), y=Sales, fill=Store))+ geom_col()
reorder(Month, -Sales)
reorder(Month)
?reorder
reorder(Month, -Sales)
Month
reorder(Month, -Sales)
Sales
ggplot(data=sales.df2, aes(x= reorder(Month , -Sales), y=Sales, fill=Store))+ geom_col()
reorder(Month, -Sales)
reorder(Month, Sales)
Month
Sales
reorder(Month, Sales)
ggplot(data=sales.df2, aes(x=reorder(Month, -Sales), y=Sales, fill=Store))+geom_col()+ coord_flip()
##########bar chart
Gap <- c(354, 250, 234, 312)
Eul <- c(234, 450, 200, 250)
sales.k <- matrix(c(Gap, Eul), ncol=4, byrow=T, dimnames=list(c("Gap", "Eul"), c("Jan", "Feb", "Mar", "Apr")))
sales.k
Gap <- c(354, 250, 234, 312)
Eul <- c(234, 450, 200, 250)
sales.k <- matrix(c(Gap, Eul), ncol= 4, byrow=T, dimnames =
list( c("Gap", "Eul"), c("Jan","Feb","Mar","Apr")))
sales.k
barplot(sales.k, main= "Sales by Month", xlab ="Month", ylab="Sales", beside=T,
names.arg = c("Jan", "Feb", "Mar", "Apr"), border="blue",  col= rainbow(2), ylim=(c(0, 1000)))
legend(10, 1000, c("Gap", "Eul"), cex=0.8, fill = rainbow(2))
m.total <- apply(sales.k, 2, sum)             # for practice
lines(m.total, type="o", pch=22, lty=3)
text(3, 900, "total")
barplot(sales.k, main= "Sales by Month", xlab ="Month", ylab="Sales", beside=T,
names.arg = c("Jan", "Feb", "Mar", "Apr"), border="blue",  col= rainbow(2), ylim=(c(0, 1000)))
legend(10, 1000, c("Gap", "Eul"), cex=0.8, fill = rainbow(2))
m.total <- apply(sales.k, 2, sum)
lines(c(2, 5, 8, 11), m.total, type="o", pch=21, lty=1, col="blue", lwd=2)
text(3, 800, "Total")
text(2, 650, "588")
text(5, 750, "700")
sales.k <- matrix(c(Gap, Eul), ncol= 4, byrow=T, dimnames =
list( c("Gap", "Eul"), c("Jan","Feb","Mar","Apr")))
#examination
barplot(sales.k, main= "Sales by Month", xlab ="Month", ylab="Sales", beside=T,
names.arg = c("Jan", "Feb", "Mar", "Apr"), border="blue",  col= rainbow(2), ylim=(c(0, 1000)))
legend(10, 1000, c("Gap", "Eul"), cex=0.8, fill = rainbow(2))
m.total <- apply(sales.k, 2, sum)             # for practice
lines(m.total, type="o", pch=22, lty=3)
text(3, 900, "total") #between 3 and 9
source('~/Documents/R/School/4:13.R', echo=TRUE)
lines(c(2, 5, 8, 11), m.total, type="o", pch=21, lty=1, col="blue", lwd=2)
#examination
barplot(sales.k, main= "Sales by Month", xlab ="Month", ylab="Sales", beside=T,
names.arg = c("Jan", "Feb", "Mar", "Apr"), border="blue",  col= rainbow(2), ylim=(c(0, 1000)))
lines(c(2, 5, 8, 11), m.total, type="o", pch=21, lty=1, col="blue", lwd=2) #what is 2, 5, 8, 11? x axis
m.total <- apply(sales.k, 2, sum)  #시험
m.total
sales.k
m.total
#lty -> line type
lines(c(2, 5, 8, 11), m.total, type="o", pch=21, lty=2, col="blue", lwd=2) #what is 2, 5, 8, 11? x axis, y axis, matching
#lty -> line type
lines(c(2, 5, 8, 11), m.total, type="o", pch=21, lty=3, col="blue", lwd=2) #what is 2, 5, 8, 11? x axis, y axis, matching
#lty -> line type
lines(c(2, 5, 8, 11), m.total, type="o", pch=21, lty=1, col="blue", lwd=2) #what is 2, 5, 8, 11? x axis, y axis, matching
text(3, 800, "Total")
text(2, 650, "588")
text(5, 750, "700")
#use ggplot2
library(ggplot2)
Month <- c("Jan", "Feb","Mar", "Apr")
Gap <- c(354, 250, 234, 312)
Eul <- c(234, 450, 200, 250)
#pie chart
library(ggplot2)
source('~/Documents/R/School/4:13.R', echo=TRUE)
week <- c("Mon", "Tue", "Wed", "Thu", "Fri")
#line chart
Q1 <- c("Jan", "Feb", "Mar", "Apr")
Seoul <- c(354, 250, 234, 312)
Busan <- c(234, 450, 200, 250)
#line chart
Q1 <- c("Jan", "Feb", "Mar", "Apr")
Seoul <- c(354, 250, 234, 312)
Busan <- c(234, 450, 200, 250)
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"))
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"))
#line chart
Q1 <- c("Jan", "Feb", "Mar", "Apr")
Seoul <- c(354, 250, 234, 312)
Busan <- c(234, 450, 200, 250)
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"))
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"), axis(2, ylim=c(0, 500)))
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"), axis(2, ylim=c(0, 500)))
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"))
#line chart
Q1 <- c("Jan", "Feb", "Mar", "Apr")
Seoul <- c(354, 250, 234, 312)
Busan <- c(234, 450, 200, 250)
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"))
#pie chart
library(ggplot2)
axis(1, at=1:4, lab=c("Jan", "Feb", "Mar", "Apr"))
axis(2, ylim=c(0, 500))
