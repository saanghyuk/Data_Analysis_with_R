dimnames(arry1)
mid <- matrix(c(60, 80, 70, 45, 65, 95), ncol=2, dimnames=list(c("kim", "kang", "shin"), c("math", "english")))
mid
final <- matrix(c(70, 90, 60, 55, 75, 85), ncol=2, dimnames = list(c("kim", "kang", "shin"), c("math", "english")))
final
total.array <- array(c(mid, final), dim=c(3, 2, 2))
total.array
total.array <- array(c(mid, final), dim=c(3, 2, 2), dimnames = list(c("kim", "kang", "shin"), c("math", "english")))
total.array
array
?array
total.array <- array(c(mid, final), dim=c(3, 2, 2), dimnames = list(c("kim", "kang", "shin"), c("math", "english"), c("mid", "final")))
total.array
#과제
?array
#과제
?array
mid <- array(c( 100, 30, 40, 50, 50, 50, 80, 80, 80, 70, 120, 60), ncol=4)
c( 100, 30, 40, 50, 50, 50, 80, 80, 80, 70, 120, 60)
score<-c( 100, 30, 40, 50, 50, 50, 80, 80, 80, 70, 120, 60)
matrix(score, ncol=4)
matrix(score, ncol=4, dimnames=list(c("그렇다", "아니다", "모르겠다"), c("서울매장", "부산매장")))
matrix(score, ncol=4, dimnames=list(c("그렇다", "아니다", "모르겠다"), c(2, 3, 4, 5)))
matrix(score, ncol=4, dimnames=list(c("그렇다", "아니다", "모르겠다"), c(2, 3, 4, 5)))
matrix(score, ncol=4, dimnames=list(c("Yes", "아니다", "모르겠다"), c(2, 3, 4, 5)))
matrix(score, ncol=4, dimnames=list(c("YES", "NO", "No IDEA"), c(2, 3, 4, 5)))
matrix(score, ncol=4, dimnames=list(c("YES", "NO", "NO IDEA"), c(2, 3, 4, 5)))
mat5 <- matrix(score, ncol=4, dimnames=list(c("YES", "NO", "NO IDEA"), c(2, 3, 4, 5)))
mat5 <- matrix(score, ncol=4, xlab="hi", dimnames=list(c("YES", "NO", "NO IDEA"), c(2, 3, 4, 5)))
mat5 <- matrix(score, ncol=4,  dimnames=list(c("YES", "NO", "NO IDEA"), c(2, 3, 4, 5)))
mat5
score[1:6]
mat4 <- matrix(score[1:6], ncol=2)
mat4
mat4 <- matrix(score[1:6], ncol=2, dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
mat5 <- matrix(score[7:12], ncol=2, dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
mat4
mat5
total.array <- array(c(mat4, mat5), dim=c(3, 4))
total.array
total.array <- array(c(mat4, mat5), dim=c(3, 4), dimnames=list(c("YES", "NO", "NO IDEA"), list(c("Seoul","Busan"), c("MAN", "WOMAN"))))
total.array <- array(c(mat4, mat5), dim=c(3, 4), dimnames=list(c("YES", "NO", "NO IDEA"), c("Seoul","Busan"), c("MAN", "WOMAN")))
total.array <- array(c(mat4, mat5), dim=c(3, 4), dimnames=list(c("YES", "NO", "NO IDEA"), c("Seoul","Busan"), c("MAN", "WOMAN"))
total.array <- array(c(mat4, mat5), dim=c(3, 4), dimnames=list(c("YES", "NO", "NO IDEA"), c("Seoul","Busan"), c("MAN", "WOMAN")))
total.array <- array(c(mat4, mat5), dim=c(3, 4), dimnames=list(c("YES", "NO", "NO IDEA"), c("Seoul","Busan")))
total.array <- array(c(mat4, mat5), dim=c(3, 4))
total.array
total.array <- matrix(c(mat4, mat5))
total.array
cbind(mat4, mat5)
mat6 <- cbind(mat4, mat5)
mat4 <- matrix(score[1:6], ncol=2, dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), c("Seoul")))
mat4 <- matrix(score[1:6], ncol=2, dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), names=c("Hi")))
mat4 <- matrix(score[1:6], ncol=2, dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
names(mat4) <- "hi"
mat4
mat4 <- matrix(score[1:6], ncol=2, dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
mat5
?cbind
mat6 <- cbind(mat4, mat5, deparse.level = 3)
mat6
mat6 <- cbind(mat4, mat5, deparse.level = 5)
mat6
mat6 <- cbind(mat4, mat5, deparse.level = 2)
mat6
mat6 <- cbind(mat4, mat5, make.row.names="Will")
mat6
mat6 <- cbind(mat4, mat5)
mat6
letters
length(letters)v1<-c("1행","2행")
length(letters)v1<-c("1행","2행")
length(letters)
v1<-c("1행","2행")
v2<-c("1열","2열","3열")
v3<-c("1번matrix","2번matrix")
matrix(letters[1:6],nrow=2,ncol=3,dimnames=list(v1,v2))
arr<-array(letters,dim=c(2,3,2),dimnames=list(v1,v2,v3))
arr
mat5
mat6
mat6 <- cbind(mat4, mat5)
mat6
mat7 <- array(c(mat1, mat2))
mat7
mat7 <- array(c(mat1, mat2))
mat7
mat7 <- array(c(mat1, mat2), dim=c(3, 4, 2), dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
mat7 <- array(c(mat1, mat2), dim=c(3, 4, 2), dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
mat7 <- array(c(mat4, mat5), dim=c(3, 4, 2), dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
mat4
mat5
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2), dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN")))
mat7
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2), dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), c("Seoul Store", "Busan Store")))
mat7
mat7
?array
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2), names=c("hi") dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), c("Seoul Store", "Busan Store")))
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2), names=c("hi"), dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), c("Seoul Store", "Busan Store")))
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2), names="hi", dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), c("Seoul Store", "Busan Store")))
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2), names=c("hi"), dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), c("Seoul Store", "Busan Store")))
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2), names="hi", dimnames=list(c("YES", "NO", "NO IDEA"), c("MAN", "WOMEN"), c("Seoul Store", "Busan Store")))
mat7
mat7 <- array(c(mat4, mat5), dim=c(3, 2, 2),  dimnames=list(c("YES", "NO", "NO IDEA"), c("Will", "MAN", "WOMEN"), c("Seoul Store", "Busan Store")))
mat7
mat7
#LIST
lst <- list(name="KIM SANG HYUK", dept="SALES", salary=400000, union=T)
lst
#LIST
lst <- list(name="KIM SANG HYUK", dept="SALES", salary=400000)
lst
#LIST
lst <- list(name="KIM SANG HYUK", dept="SALES", salary=400000, union=T)
lst
lst1<- list("Sanghyuk SON", "Marketing", 30000, T)
lst1
lst$salary
lst[["salary"]]
lst[[3]]
lst[[1]]
lst[1]
lst2 <- list(name="SANGHYUK SON", dept="Sales", salary=40000, union=T)
lst2
lst2$gender="male"
lst2
lst2$dept <- NULL
lst2
lst_tot <- c(lst2, lst1)
lst_tot
lst
class(lst)
names(lst)
unlst <- unlist(lst)
unlst
class(unlst)
mode(unlst)
class(unlst)
lst_rm  <- unlst
lst_rm
names(lst_rm)
names(lst_rm) <- NULL
lst_rm
unlist
unlst
unlst
lst_rm1 <- unname(unlist)
lst_rm1
lst_rm1 <- unname(unlist)
lst_rm1
unlst
lst_rm1 <- unname(unlst)
lst_rm1
#FACTOR
vec <- c(2,3,4,4,2)
#FACTOR
vec <- c(2,3,4,4,2)
vec
class(vec)
mean(vec)
levels(vec)
levels(vec)
length(vec)
fac <- factor(c(2,3,4,4,2))
fac
class(fac)
mean(fac)
levels(fac)
length(vec)
fac<- as.numeric(fac)
fac
fac
resp.vec <- c("yes", "yes", "no", "yes")
resp.fac <- factor(resp.vec)
names(resp.fac)
name <- c("A", "B", "C", "D")
name
name.fac <- factor(name)
pers.fac <- factor(year)
pers.fac <- factor(year)
year <- c("10대", "20대", "10대", "30대")
pers.fac <- factor(year)
length(pers.fac)
quality <- c("best", "better", "good", "best")
prefer <- ordered(quality, levels=c("good", "better", "best"))
prefer
#data frame이용
height <- c(160, 170, 180, 170, 180, 170)
weight <- c(70, 60, 80, 60, 70)
weight <- c(70, 60, 80, 60, 80, 70)
class <- c("1", "1", "1", "2", "2", "2")
gender <- c("male", "female", "female", "male", "male", "female")
df1 <- data.frame(height, weight, gender, class, row.names=c("Kim", "Lee", "Park", "Choi", "Son", "Kang"))
df1
length(df1)
mode(df1)
df1 <- data.frame(height, weight, gender, class, row.names=c("Kim", "Lee", "Park", "Choi", "Son", "Kang"))
df1
length(df1)
mode(df1)
class(df1)
row.names(df1)
class(df1)
dim(df1)
df1$height
is.numeric(df1$height)
is.character(df1$class)
summary(df1)
str(df1)
df1 <- data.frame(height, weight, gender, class, row.names=c("Kim", "Lee", "Park", "Choi", "Son", "Kang"), stringsAsFactors = F)
str(df1)
score1 <- data.frame(hakseong = c("K", "K", "C", "J", "C"), midterm=c(86, 33, 25,64,74))
score1
is.numeric(score1$hakseong)
is.numeric(score1$midterm)
score1[[2]]
score1[, 2]
score1$midterm
score1[1:3, ]
score1[1:3, 2]
score1
class(score1[1:3, 2])
score1[1:3, 2, drop=FALSE]
class(score[1:3, 2, drop=F])
class(score1[1:3, 2, drop=F])
score1
name <- c("KIM", "LEE", "PARK", "CHOI", "KANG")
height <- c(168, 123,124,234,235)
gender <- c("female", "male", "female", "female", "male")
ks.df <- data.frame(name, height, gender)
temp.df <- ks.df
install.packages("dplyr")
library(dplyr)
add <- data.frame(name="HONG", height=165, gender="male")
ks.df1 <- bind.rows(ks.df, add)
library(dplyr)
ks.df1 <- bind.rows(ks.df, add)
ks.df1 <- bind+rows(ks.df, add)
ks.df1 <- bind_rows(ks.df, add)
ks.df1 <- bind_rows(ks.df, add)
ks.df
add <- data.frame(name="HONG", height=165, gender="male")
ks.df1 <- bind_rows(ks.df, add)
ks.df1 <- bind_rows(ks.df, add)
name <- c("KIM", "LEE", "PARK", "CHOI", "KANG")
height <- c(168, 123,124,234,235)
gender <- c("female", "male", "female", "female", "male")
ks.df <- data.frame(name, height, gender)
temp.df <- ks.df
ks.df
add <- data.frame(name="HONG", height=165, gender="male")
add
ks.df1 <- bind_rows(ks.df, add)
ks.df
?bind_rows
ks.df1 <- bind_rows(ks.df, add)
add
ks.df
add
bind_rows(ks.df, add)
ks.df1
add <- data.frame(name=c("Chung", "Kim"), height=c(168, 183), gender=c("male", "female"))
add
ks.df2 <- bind_rows(ks.df1, add)
ks.df2
#열 추가. left_join()
ks.df3 <- temp.df
ks.df3
add <- data.frame(weight=c(60, 50, 40, 20, 50))
ks.df3
ks.df3 <- data.frame(ks.df3, add)
ks.df3
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height" , "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add , list=("height" , "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add , list=("height" , "weight" , "gender"))
ks.df3
ks.df3 <- data.frame(ks.df3, add , list=("height" , "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
ks.df3
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
?data.frame
ks.df3[c("height", "weight", "gender")]
data <- subset(ks.df3, select=c("height", "weight", "gender"))
data
ht <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), height=c(160, 170, 180, 172 ,182, 170))
ht
wt <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), weight=c(55, 65, 34, 63, 77, 34))
ht <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), height=c(160, 170, 180, 172 ,182, 170))
wt <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), weight=c(55, 65, 34, 63, 77, 34))
body <- merge(ht, wt, by="name")
body
ht <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), height=c(160, 170, 180, 172 ,182, 170))
wt <- data.frame(student=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), weight=c(55, 65, 34, 63, 77, 34))
body <- merge(ht, wt, by="name")
body1 <- merge(ht, wt, by.x="name", by.y="student")
body1
set.seed(1)
x <- round(runif(12, 1, 100))
x
runif(12, 1, 100)
ts1 <- ts(x, start=2017, frequency=12)
ts1
class(ts1)
mode(ts1)
ts2 <- ts(x, start=2017, frequency = 4)
ts2
ts3 <- ts(x, start=2017, frequency = 1)
ts3
ts4 <- ts(x, end=2020, frequency=1)
ts4
ts1 <- ts(x, start=2017, frequency=12)
ts2 <- ts(x, start=2017, frequency = 4)
ts3 <- ts(x, start=2017, frequency = 1)
ts4 <- ts(x, end=2020, frequency=1)
ts1
ts2
ts3
ts4
?ts
ts1 <- ts(x, start=2017, frequency=12)
ts1
x
ts2 <- ts(x, start=2017, frequency = 4)
ts2
source('~/Documents/R/School/Practice.R', encoding = 'UTF-8', echo=TRUE)
ts3
x
x
x <- round(runif(12, 1, 100))
ts3 <- ts(x, start=2017, frequency = 1)
x
ts3
ts4
ts2
length(ts1)
mode(ts1)
tsp(ts1)
start(ts1)
ts1
tsp(ts1)
ts1
tsp(ts1)
mat <- matrix(1:24, ncol=2)
mat
mts1 <- ts(mat, start=2018, frequency=4)
mts1
set.seed(1)
x<- round(runif(12, 1, 100))
y <- round(runif(12, 1, 100))
df.temp <- matrix(12, 1, 100)
df.temp <- matrix(c(x, y), ncol=2)
df.temp
mts3 <- ts(df.temp, start=2018, frequency=4)
mts3
dimnames(mts3) <- list(NULL, c("Revenue","Profit"))
dimnames
dimnames
dimnames(mts3) <- list(NULL, c("Revenue","Profit"))
mts3
dimnames
?dimnames
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
dimnames(mts3) <- list(NULL, c("Revenue","Profit"))
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
set.seed(1)
x<- round(runif(12, 1, 100))
y <- round(runif(12, 1, 100))
df.temp <- matrix(c(x, y), ncol=2)
mts3 <- ts(df.temp, start=2018, frequency=4)
mts3
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
set.seed(1)
x<- round(runif(12, 1, 100))
y <- round(runif(12, 1, 100))
df.temp <- matrix(c(x, y), ncol=2)
mts3 <- ts(df.temp, start=2018, frequency=4)
mts3
mat3 <- rename(mat3, c("G", "K"))
mat3
mts3
mts3 <- rename(mat3, c("G", "K"))
mts3
list(NULL, c("R", "K"))
setwd('/Users/sanghyuk/Documents/R/Machine-Learning/Lecture/Machine Learning with R/Linear Regression')
df <- read.csv('student-mat.csv', sep=';')
head(df) #뭐야 이거. ;로 separate되있음.
#G1- first period grade. 이런식으로 g3까지 있음.
summary(df)
#clean the data
#check NA value
any(is.na(df)) #NA value가 없다는 것.
str(df)
#ggplot
library(ggplot2)
library(ggthemes)
library(dplyr)
?sapply()
#Num only
is.numeric(df)
num.cols <- sapply(df, is.numeric) #return only numeric columns
num.cols
cor.data <- cor(df[, num.cols]) #correlation
cor.data
#Visualize this data above
#correlation diagram package
install.packages('corrgram')
install.packages("corrplot")
library(corrgram)
library(corrplot)
corrplot(cor.data, method='color')
#corplot -> 반드시 numeric을 줘야 하는데
#corgram은 df를 직접 줄 수 있음.
corrgram(df, order=T, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt)
ggplot(df, aes(x=G3)) +geom_histogram(bins=20, alpha=0.5, fill='blue')
#Spliting Data into <Training Set, Testing Set>
install.packages('caTools')
#This package allows us to randomly split up your data into Training set & Testing Set
library(caTools)
#Set A Seed
set.seed(101) #랜덤이지만 같은 넘버 필요할 때
# Split up the Sample(caTools)
?sample.split
#70% Traing Sample
sample <- sample.split(df$G3, SplitRatio= 0.7)
sample
# 70% of data -> TRAIN
train <- subset(df, sample==TRUE )
# 30% will betest
test <- subset(df, sample==FALSE)
#TRAIN and BUILD MODEL
#G3를 예측 할꺼고, 그걸 위해 내 모든 데이터 쓸꺼임.
model <- lm(G3 ~ . , data=train )
#Run Model
#Interpret the Model
summary(model)
#Visualize this Model
summary(model)
res <- residuals(model)
class(res)
res <- as.data.frame(res)
head(res)
res
library(ggplot2)
ggplot(res, aes(res)) + geom_histogram(fill='blue', alpha=0.5)
#Plotting Model
plot(model)
results <- cbind(G3.predictions, test$G3)
colnames(results) <- c('predicted', 'actual')
results <- as.data.frame(results)
head(results)
results
#Our model was predicting negative final score test values.
#점수중 가장 낮은 것의 예측치는 0 여야 함.
#TAKE CARE OF NEGATIVE VALUES
to_zero <- function(x){
if(x <0 ){
return(0)
}else{
return (x)
}
}
#APPLY ZERO FUNCTIONS
min(results) # -가 있음.
results$predicted <- sapply(results$predicted, to_zero)
results
#MEAN SQUARED ERROR
mse <- mean((results$actual - results$predicted)^2)
print('MSE')
print(mse)
#ROOT MEAN SQUARED ERROR
print('Squared Root of MSE')
print(mse^0.5)
#########
#sum of the squared error
SSE  <- sum((results$predicted - results$actual)^2)
SST <- sum((mean(df$G3) - results$actual)^2)
R2 <- 1-SSE/SST
R2
#이건 뭘까?
#잔차가 정규분포처럼 나오길 원해.
#잔차가 0을 중심으로 정규분포처럼 나오나봐.
#근데, 큰 negative값의 잔차들이 있네
#lm을 그릴떄, 모델이 poor 학생들에게 - 점수를 줌.
#그러나, 제일 낮은 점수는 0 이잖아.
#The General model of building a linear regression model in R
#looks like this:
#lm(linear model), (y(feature column ), )
model <- lm(y~x1+x2, data)
#or to use all the features in your data
model <- lm(y~. , data)
library(ggplot2)
library(ggthemes)
library(dplyr)
#Num only
is.numeric(df)
num.cols <- sapply(df, is.numeric) #return only numeric columns
num.cols
cor.data <- cor(df[, num.cols]) #correlation
corrgram(df, order=T, lower.panel=panel.shade, upper.panel=panel.pie, text.panel=panel.txt)
install.packages("caTools")
ggplot(df, aes(x=G3)) +geom_histogram(bins=20, alpha=0.5, fill='blue')
ggplot(df, aes(x=G3)) +geom_histogram(bins=20, alpha=0.5, fill='blue')
