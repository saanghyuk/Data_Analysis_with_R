source('~/Documents/R/Machine-Learning/demo.R', echo=TRUE)
source('~/Documents/R/Machine-Learning/demo.R', echo=TRUE)
print('Second Line')
source('~/Documents/R/Machine-Learning/demo.R', echo=TRUE)
1+2
100+11
12.2 + 13.1
5-3
100*2 / 50/2
100 * (2+50) /2
5/2
#Get remainer
5 &&2
#Get remainer
5 &&2
#Get remainer
5 %%2
10 %5 8
10 %% 8
# this is a comment
# this is a comment
print('Hello')
#Convention of Variables -> Start with lower case
variables <- 100
variable
#Convention of Variables -> Start with lower case
variabls <- 100
#Convention of Variables -> Start with lower case
variable <- 100
variable
bank <- 1000
bank
#multiple word use dot!
bank.account <- 100
bankAccount <- 100
deposit <- 20
bank.account <- bank.account + deposit
deposit <- 20
bank.account <- bank.account + deposit
bank.account
TRUE #Logical
a<- T
#Characters
'hello'
a <- 'Hello'
b <- "Hello"
a
b
#Class Function to know what it is
class(a)
class(b)
class(12)
class(32.2)
class(TRUE)
class(F)
# c -> combine to be vector
nvec <- c(1, 2, 3, 4)
nvec
# c -> combine to be vector
nvec <- c(1, 2, 3, 4)
nvec
class(nvec)
class(cvec)
cvec <- c("U", "S", "A")
class(cvec)
lvec <- (T, F)
lnec
lvec
lvec <- (T, F)
lvec
lvec <- c(T, F)
lvec
v <- c(FALSE, 30, 40)  #FALSE -> 0
#You must put same data types in one vector
v <- c(TRUE, 20, 40) #TRUE ->1
v <- c('USA', 20, 31) #20, 31 -> character
#Vector names
temps <- c(72, 71, 68 73, 69, 75)
#Vector names
temps <- c(72, 71, 68 73, 69, 75)
#Vector names
temps <- c(72, 71, 68 73, 69, 75)
#Vector names
temps <- c(72, 71, 68, 73, 69, 75)
temps
names(temps) <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')
temps
names <- days
names(temps) <- days
ls
ls
l
ls
v1 <- c(1, 2, 3)
v2 <- c(5, 6, 7)
v1 +v2
v1- v2
v1-v2
v2-v1
v1/v2
v1*v2
sum(v1)
sum.of.vec <- sum(v1)
sum.of.vec <- sum(v2)
sum.of.vec <- sum(v1)
sd(v1)
mean.of.vec <- mean(v2)
max(v1)
min(v1)
prod <-prod(v1)
prod
prod(c(5, 6, 7))
prod(c(5, 5, 6))
v1 <- c(100, 200, 300)
v2 <- c('a', 'b', 'c')
v1 <- c(100, 200, 300)
v2 <- c('a', 'b', 'c')
v1
v2
#Indexing in R starts at 1
v1
#Indexing in R starts at 1
v1[1]
#Indexing in R starts at 1
v1[1:3]
v2[1:#]
v2[1:3]
v2[1:3]
#Indexing in R starts at 1
v1[1:3]
v2[1:3]
v1[1, 3]
v1[c(1, 3)]
v <- c(1,2,3,4,5,6,7,8,9,10)
v[1:3]
v[2:4]
v[2:4]
v[7:10]
v <- c(1,2,3,4)
names(v) <- c('a', 'b', 'c', 'd')
v[a:b]
v['a':'d']
v[2]
v['b']
v[c('b', 'd')]
v
v
#Filter
v[v>2]
v>2
v>2
my.filter <- v>2
v[my.filter]
help('vector')
help.search('vector')
5 >6
6 <= 7
5==5
2 != 4
v <- 2
v == 3
v == 2
v <- 1
v <- 1
v <- 1
v <- 1
v <- 2
v <= 1
v
my.var <- 2
my.var < -10
my.var <- 10
#
v <- c(1,2,3,4,5)
v < 2
v1<v2
2^5
#2
v1 <- c(23, 27, 23, 21, 34)
v1
#3
day <- c("Mon", "Tue", "Wed", "Thu", "Fri")
names(v1) <-day
v1
#4
mean(v1)
#5
over.23 <- v1<23
over.23
#5
over.23 <- v1>23
over.23
over.23 <- over.23[over.23]
over.23
#5
over.23 <- v1>23
over.23
over.23 <- v1[over.23]
over.23
#6
max(v1)
#6
v1
max(v1)
max(v1)
max(v1)
#6
?max
pmax(v1)
pmax(v1)
max(v1)
#2
stock.price <- c(23, 27, 23, 21, 34)
stock.price
#3
day <- c("Mon", "Tue", "Wed", "Thu", "Fri")
names(stock.price) <-day
stock.price
stock.price
#4
mean(stock.price)
#5
over.23 <- stock.price>23
over.23
over.23 <- stock.price[over.23]
over.23 <- stock.price[over.23]
over.23
#1
2^5
#2
stock.price <- c(23, 27, 23, 21, 34)
stock.price
#3
day <- c("Mon", "Tue", "Wed", "Thu", "Fri")
names(stock.price) <-day
stock.price
#4
mean(stock.price)
#5
over.23 <- stock.price>23
over.23
over.23 <- stock.price[over.23]
over.23
max(stock.price)
#2가지 방법이 있음.
max(stock.price)
stock.price[stock.price==34]
#method 2
stock.price[stock.price == max(stock.price)]
