dim(df1)
df1$height
is.numeric(df1$height)
is.character(df1$class)
summary(df1)
str(df1)
df1 <- data.frame(height, weight, gender, class, row.names=c("Kim", "Lee", "Park", "Choi", "Son", "Kang"), stringsAsFactors = F)
str(df1)
score1 <- data.frame(hakseong = c("K", "K", "C", "J", "C"), midterm=c(86, 33, 25,64,74))
score1
is.numeric(score1$hakseong)
is.numeric(score1$midterm)
score1[[2]]
score1[, 2]
score1$midterm
score1[1:3, ]
score1[1:3, 2]
score1
class(score1[1:3, 2])
score1[1:3, 2, drop=FALSE]
class(score[1:3, 2, drop=F])
class(score1[1:3, 2, drop=F])
score1
name <- c("KIM", "LEE", "PARK", "CHOI", "KANG")
height <- c(168, 123,124,234,235)
gender <- c("female", "male", "female", "female", "male")
ks.df <- data.frame(name, height, gender)
temp.df <- ks.df
install.packages("dplyr")
library(dplyr)
add <- data.frame(name="HONG", height=165, gender="male")
ks.df1 <- bind.rows(ks.df, add)
library(dplyr)
ks.df1 <- bind.rows(ks.df, add)
ks.df1 <- bind+rows(ks.df, add)
ks.df1 <- bind_rows(ks.df, add)
ks.df1 <- bind_rows(ks.df, add)
ks.df
add <- data.frame(name="HONG", height=165, gender="male")
ks.df1 <- bind_rows(ks.df, add)
ks.df1 <- bind_rows(ks.df, add)
name <- c("KIM", "LEE", "PARK", "CHOI", "KANG")
height <- c(168, 123,124,234,235)
gender <- c("female", "male", "female", "female", "male")
ks.df <- data.frame(name, height, gender)
temp.df <- ks.df
ks.df
add <- data.frame(name="HONG", height=165, gender="male")
add
ks.df1 <- bind_rows(ks.df, add)
ks.df
?bind_rows
ks.df1 <- bind_rows(ks.df, add)
add
ks.df
add
bind_rows(ks.df, add)
ks.df1
add <- data.frame(name=c("Chung", "Kim"), height=c(168, 183), gender=c("male", "female"))
add
ks.df2 <- bind_rows(ks.df1, add)
ks.df2
#열 추가. left_join()
ks.df3 <- temp.df
ks.df3
add <- data.frame(weight=c(60, 50, 40, 20, 50))
ks.df3
ks.df3 <- data.frame(ks.df3, add)
ks.df3
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height" , "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add , list=("height" , "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add , list=("height" , "weight" , "gender"))
ks.df3
ks.df3 <- data.frame(ks.df3, add , list=("height" , "weight" , "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
ks.df3
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
ks.df3 <- data.frame(ks.df3, add, list=("height", "weight", "gender"))
?data.frame
ks.df3[c("height", "weight", "gender")]
data <- subset(ks.df3, select=c("height", "weight", "gender"))
data
ht <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), height=c(160, 170, 180, 172 ,182, 170))
ht
wt <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), weight=c(55, 65, 34, 63, 77, 34))
ht <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), height=c(160, 170, 180, 172 ,182, 170))
wt <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), weight=c(55, 65, 34, 63, 77, 34))
body <- merge(ht, wt, by="name")
body
ht <- data.frame(name=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), height=c(160, 170, 180, 172 ,182, 170))
wt <- data.frame(student=c("Kim", "Lee", "Park", "Choi", "Kang", "Shin"), weight=c(55, 65, 34, 63, 77, 34))
body <- merge(ht, wt, by="name")
body1 <- merge(ht, wt, by.x="name", by.y="student")
body1
set.seed(1)
x <- round(runif(12, 1, 100))
x
runif(12, 1, 100)
ts1 <- ts(x, start=2017, frequency=12)
ts1
class(ts1)
mode(ts1)
ts2 <- ts(x, start=2017, frequency = 4)
ts2
ts3 <- ts(x, start=2017, frequency = 1)
ts3
ts4 <- ts(x, end=2020, frequency=1)
ts4
ts1 <- ts(x, start=2017, frequency=12)
ts2 <- ts(x, start=2017, frequency = 4)
ts3 <- ts(x, start=2017, frequency = 1)
ts4 <- ts(x, end=2020, frequency=1)
ts1
ts2
ts3
ts4
?ts
ts1 <- ts(x, start=2017, frequency=12)
ts1
x
ts2 <- ts(x, start=2017, frequency = 4)
ts2
source('~/Documents/R/School/Practice.R', encoding = 'UTF-8', echo=TRUE)
ts3
x
x
x <- round(runif(12, 1, 100))
ts3 <- ts(x, start=2017, frequency = 1)
x
ts3
ts4
ts2
length(ts1)
mode(ts1)
tsp(ts1)
start(ts1)
ts1
tsp(ts1)
ts1
tsp(ts1)
mat <- matrix(1:24, ncol=2)
mat
mts1 <- ts(mat, start=2018, frequency=4)
mts1
set.seed(1)
x<- round(runif(12, 1, 100))
y <- round(runif(12, 1, 100))
df.temp <- matrix(12, 1, 100)
df.temp <- matrix(c(x, y), ncol=2)
df.temp
mts3 <- ts(df.temp, start=2018, frequency=4)
mts3
dimnames(mts3) <- list(NULL, c("Revenue","Profit"))
dimnames
dimnames
dimnames(mts3) <- list(NULL, c("Revenue","Profit"))
mts3
dimnames
?dimnames
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
dimnames(mts3) <- list(NULL, c("Revenue","Profit"))
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
set.seed(1)
x<- round(runif(12, 1, 100))
y <- round(runif(12, 1, 100))
df.temp <- matrix(c(x, y), ncol=2)
mts3 <- ts(df.temp, start=2018, frequency=4)
mts3
mat3 <- rename(mat3, c("HI", "BYE"))
mat3
set.seed(1)
x<- round(runif(12, 1, 100))
y <- round(runif(12, 1, 100))
df.temp <- matrix(c(x, y), ncol=2)
mts3 <- ts(df.temp, start=2018, frequency=4)
mts3
mat3 <- rename(mat3, c("G", "K"))
mat3
mts3
mts3 <- rename(mat3, c("G", "K"))
mts3
list(NULL, c("R", "K"))
#DATA FRAME
height <- c(160, 170, 180, 170, 180, 170)
weight <- c(70, 60, 80, 60, 80, 70)
gender <- c("female", "male", "male", "female", "female", "male")
#DATA FRAME
height <- c(160, 170, 180, 170, 180, 170)
weight <- c(70, 60, 80, 60, 80, 70)
gender <- c("female", "male", "male", "female", "female", "male")
df1 <- data.frame(height, weight, gender)
df1
class <- c(1,2,3,4,5,6 )
df1 <- data.frame(height, weight, gender)
df1
df1 <- data.frame(height, weight, gender, class)
df1
rownames(df1)
rownames(df1) <- c(1,2,3,4)
?rownames()
row.names(Df1)
row.names(df1)
row.names(df1) <- c(1,2,3,4)
row.names(df1) <- c(1,2,3,4,5,7)
df1
mode(df1) #자료 유형을 아는 법
class(df1) #자료 구조를 아는 법
df$heighrt
df$height
df1$height
is.numeric(df1$height)
is.chara ter(df1$class)
is.charater(df1$class)
is.character(df1$class)
is.factor(df1$class)
is.factor(df1$class)
is.character(df1$class)
is.factor(df1$class)
ks.df3 <- temp.df
#P50 DATA FRAME
#2차원 평면의 행렬. BUT 아무거나 섞어서 넣을 수 있음(행렬은 단일 것만 넣을 수 있음).
height <- c(160, 170, 180, 170, 180, 170)
weight <- c(70, 60, 80, 60, 80, 70)
gender <- c("female", "male", "male", "female", "female", "male")
class <- c('1', '1', '1', '2', '2', '2')
height <- c(160, 170, 180, 170, 180, 170)
weight <- c(70, 60, 80, 60, 80, 70)
gender <- c("female", "male", "male", "female", "female", "male")
class <- c('1', '1', '1', '2', '2', '2')
df1 <- data.frame(height, weight, gender, class, row.names=c("Kim", "Lee", "Park", "Choi", "Kang","Shin"), stringsAsFactors = F)
df1
df1 <- data.frame(height, weight, gender, class, row.names=c("Kim", "Lee", "Park", "Choi", "Kang","Shin"),
stringsAsFactors = F)
df1
length(df1)
mode(df1)
class(df1)
length(df1)
mode(df1)
row.names(df1)
names(df1)
class(df1)
dim(df1)
wt <- data.frame(name=c("KIM", "LEE", "CHOI", "PARK"), height=c(60, 70, 80, 72))
body <- merge(ht, wt, by="name")
#P54 -> left_join
ht <- data.frame(name=c("KIM", "LEE", "CHOI", "PARK"), height=c(160, 170, 180, 172))
wt <- data.frame(name=c("KIM", "LEE", "CHOI", "PARK"), height=c(60, 70, 80, 72))
body <- merge(ht, wt, by="name")
body
wt <- data.frame(name=c("KIM", "LEE", "CHOI", "PARK"), weight=c(60, 70, 80, 72))
body <- merge(ht, wt, by="name")
body
body <- merge(ht, wt)
body
body <- merge(ht, wt)
body
wt <- data.frame(name=c("KIM", "LEE", "CHOI", "SON"), weight=c(60, 70, 80, 72))
body <- merge(ht, wt)
body
body <- merge(ht, wt, by=name)
body
body <- merge(ht, wt, by=name)
wt <- data.frame(name=c("KIM", "LEE", "CHOI", "PARK"), weight=c(60, 70, 80, 72))
body <- merge(ht, wt)
body
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
install.packages("rJava")
install.packages("memoise")
install.packages("KoNLP")
install.packages("wordcloud")
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
library(rvest)
library(rJava)
library(memoise)
library(KoNLP)            # Korean National Language Processing
library(dplyr)
library(stringr)
library(wordcloud)
useNIADic()              #  useSejongDic()
txt <- readLines("d:/R_study/text/titanic.txt")
txt
nouns <- extractNoun(txt)
vector01 <-unlist(nouns)
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount, stringsAsFactors = F)
df_word
df_word <- rename(df_word, word = Var1, freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
top_20 <- df_word %>% arrange(desc(freq)) %>% head(20)
library(RColorBrewer)
pal <- brewer.pal(8,"Dark2")
set.seed(1234)
wordcloud(words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order = F,
rot.per = .1,
scale = c(4, 0.3),
colors = pal)
library(rvest)
library(rJava)
library(memoise)
library(KoNLP)            # Korean National Language Processing
library(dplyr)
library(stringr)
library(wordcloud)
useNIADic()              #  useSejongDic()
txt <- readLines("d:/R_study/text/titanic.txt")
txt
nouns <- extractNoun(txt)
vector01 <-unlist(nouns)
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount, stringsAsFactors = F)
df_word
df_word <- rename(df_word, word = Var1, freq = Freq)
df_word <- filter(df_word, nchar(word) >= 2)
top_20 <- df_word %>% arrange(desc(freq)) %>% head(20)
library(rJava)
library(rvest)
library(rJava)
install.packages("rJava")
mode("T")
x <- "3"
mode(x) <- "integer"
mode(X)
mode(x)
xx <- 3.14
xx <- as.numeric(xx)
xx
xx <- as.integer(xx)
xx
yz <- c(4,5,6)
xy <- c(1,2,3)
xyz <- xy+yz
xyz
sanghyuk <- seq(1, 10)
sanghyuk
sanghyuk <- seq(1, 10)
sanghyuk
sanghyuk <- seq(1, 10, by=2)
sanghyuk
sangwon <- matrix(c(1,2,3,4,5,6), 2, 3)
sangwon
sangwon <- matrix(c(1,2,3,4,5,6), ncol=2, byrow=T)
sangwon
sangwon <- matrix(c(1,2,3,4,5,6), 2, 3)
sangwon
dim(sangwon)
mat1 <- matrix(1:12, ncol=4, dimnames=list(c("rice", "bread", "vegetable"), c("Seoul", "Dageon", "Incheon", "Gwangju")))
mat1
sangwon
sangwon <- rbind(sangwon, colSums(sangwon))
sangwon
sangwon
apploy(sangwon, 1, sum)
apploy(sangwon,  sum)
apply(sangwon,  1, sum)
apploy(sangwon, 2, sum)
apploy(sangwon, 2, sum)
appoy(sangwon, 2, sum)
apply(sangwon, 2, sum)
sangwon <- matrix(c(1,2,3,4,5,6), 2, 3)
sangwon
sangwon1 <- cbind(sangwon, rowSums(sangwon[, 2:3 ]))
sangwon1
sangwon
arry <- array(1:24, dim=c(3, 4, 2))
arry
lenght(arry)
lenght(arry)
length(arry)
class(arr)
class(arry)
mode(arry)
dimnames(arry)
names(arry)
mid <- matrix(c(80, 60, 70, 65, 54, 96), ncol=2, dimnames=list(c("kim", "kang", "shin"), c("math", "english")))
mid
final <- matrix(c(70, 90, 60, 55, 75, 87), ncol=2, dimnames=list(c("kim", "kang", "shin"), c("math", "english")))
final
c(mid, final)
total.array <- array(c(mid, final), dim=c(3, 2, 2),dimnames=list(c("kim", "kang", "shin"), c("math", "english"), c("mid", "final")))
total.array
attributes(total.array)
total.array[3, 1, 2]
total.array
test <- array(c(100, 30, 40, 50, 50, 50, 80, 80, 80, 70, 120, 60), dim=(3, 2, 2),
dimnames=list(c("그렇다", '아니다', '모르겠다'), c('남자', '여자'), c('서울매장', '부산매장')))
test <- array(c(100, 30, 40, 50, 50, 50, 80, 80, 80, 70, 120, 60), dim=(c(3, 2, 2)),
dimnames=list(c("그렇다", '아니다', '모르겠다'), c('남자', '여자'), c('서울매장', '부산매장')))
test
test <- array(data=c(100, 30, 40, 50, 50, 50, 80, 80, 80, 70, 120, 60), dim=(c(3, 2, 2)),
dimnames=list(c("그렇다", '아니다', '모르겠다'), c('남자', '여자'), c('서울매장', '부산매장')))
test
sangwon
test <- array(data=c(100, 30, 40, 50, 50, 50, 80, 80, 80, 70, 120, 60), dim=(c(3, 2, 2)),
dimnames=list(c("그렇다", '아니다', '모르겠다'), c('남자', '여자'), c('서울매장', '부산매장')))
test
lst <- list(name="KIM GILDONG", dept="Sales", salary=4000000, union=T)
lst
lst$name
lst['dept']
lst[['salary']]
lst[1]
lst$name
lst['dept']
lst[1]
lst[['salary']]
lst[['name']]
lst[[1]]
lst$name
lst['dept']
lst[1]
lst[['name']]
lst[[1]]
lst$name
lst['dept']
lst[1]
lst[['name']]
lst[[1]]
lst$name
lst['dept']
lst[1]
lst[[1]]
lst[['name']]
lst2 <- c(lst, dept="Marketing")
lst2
unlist(lst2)
un <- unlist(lst2)
class(un)
mode(un)
mode(un)
class(un)
str(un)
names(un) <- NULL
un
un <- unlist(lst2)
lst2unname(un)
lst2 <- unname(un)
lst2
vec <- c(2, 3, 4, 4, 2)
vec
class(vec)
mode(vec)
mean(vec)
length(vec)
levels(vec)
vec.fac <- factor(vec)
vec.fac <- factor(vec)
vec.fac
length(vec.fac)
fac1 <- as.vector(vec.fac)
fac1
quality <- c("best", "better", "good", "best")
prefer <- ordered(quality, levels=c("good", "better", "best"))
prefer
height <- c(160, 170, 180, 170, 180, 170)
weight <- c(70, 60, 50, 80, 60, 50)
height <- c(160, 170, 180, 170, 180, 170)
weight <- c(70, 60, 50, 80, 60, 50)
gender <- c("female", "male", "female", "female", "female", "male")
class <- c("1", "2", "1", "1", "2", "1")
df1 <- data.frame(height, weight, gender, class, row.names=c("KIM", "LEE", "SON", "PARK", "KANG", "CHOI"))
df1
df1
df1
df1$height
df1$gender
df[1:3, 2]
df1[1:3, 2]
df1[1:3, 2, drop=FALSE]
install.packages("dplyr")
library(dplyr)
df1
add <- data.frame(height=c(190, 180), weight=c(10, 20), gender=c("female", "male"), class=c('1', '2'))
df2 <- bind_rows(df1, add)
df2
add1 <- data.frame(hi=c(1, 2, 3, 4, 5, 6, 7, 8))
ks.df3 <- left_join(df2, add1)
ks.df3
df2
ks.df3 <- data.frame(df2, add1)
ks.df3
df[gender, class, hi]
ks.df3[gender, class, hi]
ks.df3
ks.df3[c('gender', 'class', 'hi')]
subset(ks.df3, selects=c('gender', 'class'))
?left_join
